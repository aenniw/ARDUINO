#!/usr/bin/env bash

IDE=${IDE:-clion} # clion/eclipse
WORK_DIR=${1:-.}
CMAKE_TXT=${WORK_DIR}/CMakeLists.txt

function template_cmake(){
    echo 'cmake_minimum_required(VERSION 3.2)'
    echo "project($1)"
    echo '
include(CMakeListsPrivate.txt)

add_custom_target(
    ${PROJECT_NAME}_BUILD ALL
    COMMAND ${PLATFORMIO_CMD} -f -c clion run
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

add_custom_target(
    ${PROJECT_NAME}_UPLOAD ALL
    COMMAND ${PLATFORMIO_CMD} -f -c clion run --target upload
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

add_custom_target(
    ${PROJECT_NAME}_CLEAN ALL
    COMMAND ${PLATFORMIO_CMD} -f -c clion run --target clean
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

add_custom_target(
    ${PROJECT_NAME}_TEST ALL
    COMMAND ${PLATFORMIO_CMD} -f -c clion test
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

add_custom_target(
    ${PROJECT_NAME}_REBUILD_PROJECT_INDEX ALL
    COMMAND ${PLATFORMIO_CMD} -f -c clion init --ide clion
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

add_executable(${PROJECT_NAME} ${SRC_LIST})
'
}


if [[ ${IDE} == "clion" ]] && [[ ! -e ${CMAKE_TXT} ]]; then
    echo '
cmake_minimum_required(VERSION 3.2)
project(arduino_projects)

execute_process(COMMAND ${CMAKE_HOME_DIRECTORY}/configure ${CMAKE_HOME_DIRECTORY})
set(CMAKE_CXX_STANDARD 11)
' > ${CMAKE_TXT}

    for PROJECT in $(ls -d ${WORK_DIR}/*/platformio.ini); do
        echo "add_subdirectory(${PROJECT%*/*.ini})" >> ${CMAKE_TXT}
    done
fi

for PROJECT in $(ls -d ${WORK_DIR}/*/platformio.ini); do
    cd ${PROJECT%*/*.ini}
    platformio init --ide ${IDE:-clion}
    rm ./.travis.yml ./lib/readme.txt ./.gitignore 2>/dev/null

    ## Builds CMake structure with platformio for Clion
    if [[ ${IDE} == "clion" ]]; then
        template_cmake ${PWD##*/} > ./CMakeLists.txt
    fi
    cd ..
done